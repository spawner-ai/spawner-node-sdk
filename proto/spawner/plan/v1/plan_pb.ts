// @generated by protoc-gen-es v2.2.0 with parameter "target=ts"
// @generated from file spawner/plan/v1/plan.proto (package spawner.plan.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { FieldOfView } from "../../field_of_view/v1/field_of_view_pb";
import { file_spawner_field_of_view_v1_field_of_view } from "../../field_of_view/v1/field_of_view_pb";
import type { Partition } from "../../partition/v1/partition_pb";
import { file_spawner_partition_v1_partition } from "../../partition/v1/partition_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file spawner/plan/v1/plan.proto.
 */
export const file_spawner_plan_v1_plan: GenFile = /*@__PURE__*/
  fileDesc("ChpzcGF3bmVyL3BsYW4vdjEvcGxhbi5wcm90bxIPc3Bhd25lci5wbGFuLnYxIjgKGkFnZW50RnVuY3Rpb25DYWxsUGFyYW1ldGVyEgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSJeChFBZ2VudEZ1bmN0aW9uQ2FsbBIMCgRuYW1lGAEgASgJEjsKBnBhcmFtcxgCIAMoCzIrLnNwYXduZXIucGxhbi52MS5BZ2VudEZ1bmN0aW9uQ2FsbFBhcmFtZXRlciJSCglBZ2VudFRhc2sSCgoCaWQYASABKAkSOQoNZnVuY3Rpb25fY2FsbBgCIAEoCzIiLnNwYXduZXIucGxhbi52MS5BZ2VudEZ1bmN0aW9uQ2FsbCJNCg1BZ2VudEJlaGF2aW9yEhEKCW9iamVjdGl2ZRgBIAEoCRIpCgV0YXNrcxgCIAMoCzIaLnNwYXduZXIucGxhbi52MS5BZ2VudFRhc2siwQEKCVBsYW5FdmVudBIQCghhZ2VudF9pZBgBIAEoCRIyCglwYXJ0aXRpb24YAiABKAsyHy5zcGF3bmVyLnBhcnRpdGlvbi52MS5QYXJ0aXRpb24SMAoIYmVoYXZpb3IYAyABKAsyHi5zcGF3bmVyLnBsYW4udjEuQWdlbnRCZWhhdmlvchI8Cg1maWVsZF9vZl92aWV3GAQgASgLMiUuc3Bhd25lci5maWVsZF9vZl92aWV3LnYxLkZpZWxkT2ZWaWV3Qn4KE2NvbS5zcGF3bmVyLnBsYW4udjFCCVBsYW5Qcm90b1ABogIDU1BYqgIPU3Bhd25lci5QbGFuLlYxygIPU3Bhd25lclxQbGFuXFYx4gIbU3Bhd25lclxQbGFuXFYxXEdQQk1ldGFkYXRh6gIRU3Bhd25lcjo6UGxhbjo6VjFiBnByb3RvMw", [file_spawner_field_of_view_v1_field_of_view, file_spawner_partition_v1_partition]);

/**
 * Only output.
 *
 * @generated from message spawner.plan.v1.AgentFunctionCallParameter
 */
export type AgentFunctionCallParameter = Message<"spawner.plan.v1.AgentFunctionCallParameter"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message spawner.plan.v1.AgentFunctionCallParameter.
 * Use `create(AgentFunctionCallParameterSchema)` to create a new message.
 */
export const AgentFunctionCallParameterSchema: GenMessage<AgentFunctionCallParameter> = /*@__PURE__*/
  messageDesc(file_spawner_plan_v1_plan, 0);

/**
 * Only output.
 *
 * @generated from message spawner.plan.v1.AgentFunctionCall
 */
export type AgentFunctionCall = Message<"spawner.plan.v1.AgentFunctionCall"> & {
  /**
   * Indicates the name of the function to call.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Parameters to pass to the function.
   *
   * @generated from field: repeated spawner.plan.v1.AgentFunctionCallParameter params = 2;
   */
  params: AgentFunctionCallParameter[];
};

/**
 * Describes the message spawner.plan.v1.AgentFunctionCall.
 * Use `create(AgentFunctionCallSchema)` to create a new message.
 */
export const AgentFunctionCallSchema: GenMessage<AgentFunctionCall> = /*@__PURE__*/
  messageDesc(file_spawner_plan_v1_plan, 1);

/**
 * Only output.
 *
 * @generated from message spawner.plan.v1.AgentTask
 */
export type AgentTask = Message<"spawner.plan.v1.AgentTask"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: spawner.plan.v1.AgentFunctionCall function_call = 2;
   */
  functionCall?: AgentFunctionCall;
};

/**
 * Describes the message spawner.plan.v1.AgentTask.
 * Use `create(AgentTaskSchema)` to create a new message.
 */
export const AgentTaskSchema: GenMessage<AgentTask> = /*@__PURE__*/
  messageDesc(file_spawner_plan_v1_plan, 2);

/**
 * @generated from message spawner.plan.v1.AgentBehavior
 */
export type AgentBehavior = Message<"spawner.plan.v1.AgentBehavior"> & {
  /**
   * Describes the current objective of the agent.
   *
   * @generated from field: string objective = 1;
   */
  objective: string;

  /**
   * Only output. Tasks for the agent, represented as function calls in the
   * client.
   *
   * @generated from field: repeated spawner.plan.v1.AgentTask tasks = 2;
   */
  tasks: AgentTask[];
};

/**
 * Describes the message spawner.plan.v1.AgentBehavior.
 * Use `create(AgentBehaviorSchema)` to create a new message.
 */
export const AgentBehaviorSchema: GenMessage<AgentBehavior> = /*@__PURE__*/
  messageDesc(file_spawner_plan_v1_plan, 3);

/**
 * @generated from message spawner.plan.v1.PlanEvent
 */
export type PlanEvent = Message<"spawner.plan.v1.PlanEvent"> & {
  /**
   * Required field.
   *
   * @generated from field: string agent_id = 1;
   */
  agentId: string;

  /**
   * Only input. Required field.
   *
   * @generated from field: spawner.partition.v1.Partition partition = 2;
   */
  partition?: Partition;

  /**
   * @generated from field: spawner.plan.v1.AgentBehavior behavior = 3;
   */
  behavior?: AgentBehavior;

  /**
   * Only input. The current field-of-view of the agent. Unlike world
   * partitions, the field-of-view defines local attributes.
   *
   * @generated from field: spawner.field_of_view.v1.FieldOfView field_of_view = 4;
   */
  fieldOfView?: FieldOfView;
};

/**
 * Describes the message spawner.plan.v1.PlanEvent.
 * Use `create(PlanEventSchema)` to create a new message.
 */
export const PlanEventSchema: GenMessage<PlanEvent> = /*@__PURE__*/
  messageDesc(file_spawner_plan_v1_plan, 4);

