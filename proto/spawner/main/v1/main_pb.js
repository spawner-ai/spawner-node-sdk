// @generated by protoc-gen-es v1.10.0
// @generated from file spawner/main/v1/main.proto (package spawner.main.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";
import { LanguageCode } from "../../language_code/v1/language_code_pb.js";
import { ErrorEvent } from "../../error/v1/error_pb.js";

/**
 * Configuration to control the features enabled. If set to false,
 * the process will be skipped. Note that enabling some features may
 * result in noticeably longer processing times.
 *
 * @generated from message spawner.main.v1.FeatureConfiguration
 */
export const FeatureConfiguration = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.main.v1.FeatureConfiguration",
  () => [
    { no: 1, name: "emotion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "input_filter", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "command", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message spawner.main.v1.GenerateSessionTokenRequest
 */
export const GenerateSessionTokenRequest = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.main.v1.GenerateSessionTokenRequest",
  () => [
    { no: 1, name: "api_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "api_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "workspace_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "player_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "feature_configuration", kind: "message", T: FeatureConfiguration },
    { no: 6, name: "language_code", kind: "enum", T: proto3.getEnumType(LanguageCode) },
  ],
);

/**
 * @generated from message spawner.main.v1.GenerateSessionTokenResponse
 */
export const GenerateSessionTokenResponse = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.main.v1.GenerateSessionTokenResponse",
  () => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "expire_time", kind: "message", T: Timestamp },
    { no: 5, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "error", kind: "message", T: ErrorEvent },
  ],
);

/**
 * @generated from message spawner.main.v1.GetSessionRequest
 */
export const GetSessionRequest = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.main.v1.GetSessionRequest",
  () => [
    { no: 1, name: "session_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message spawner.main.v1.GetSessionResponse
 */
export const GetSessionResponse = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.main.v1.GetSessionResponse",
  () => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expire_time", kind: "message", T: Timestamp },
    { no: 3, name: "is_expired", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "current_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message spawner.main.v1.LeaveChannelRequest
 */
export const LeaveChannelRequest = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.main.v1.LeaveChannelRequest",
  [],
);

/**
 * @generated from message spawner.main.v1.LeaveChannelResponse
 */
export const LeaveChannelResponse = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.main.v1.LeaveChannelResponse",
  () => [
    { no: 1, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

