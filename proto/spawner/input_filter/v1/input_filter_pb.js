// @generated by protoc-gen-es v1.10.0
// @generated from file spawner/input_filter/v1/input_filter.proto (package spawner.input_filter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum spawner.input_filter.v1.InputFilterType
 */
export const InputFilterType = /*@__PURE__*/ proto3.makeEnum(
  "spawner.input_filter.v1.InputFilterType",
  [
    {no: 0, name: "INPUT_FILTER_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "INPUT_FILTER_TYPE_MODERATION", localName: "MODERATION"},
    {no: 2, name: "INPUT_FILTER_TYPE_CUSTOM", localName: "CUSTOM"},
  ],
);

/**
 * @generated from message spawner.input_filter.v1.InputFilterMatch
 */
export const InputFilterMatch = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.input_filter.v1.InputFilterMatch",
  () => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Represents a filter result, which may be triggered
 * when the player input is flagged for moderation
 * or filtered words set in the workspace.
 *
 * @generated from message spawner.input_filter.v1.InputFilterEvent
 */
export const InputFilterEvent = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.input_filter.v1.InputFilterEvent",
  () => [
    { no: 1, name: "utterance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(InputFilterType) },
    { no: 3, name: "is_flagged", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "matches", kind: "message", T: InputFilterMatch, repeated: true },
  ],
);

