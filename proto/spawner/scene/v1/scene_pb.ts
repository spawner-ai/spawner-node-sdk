// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file spawner/scene/v1/scene.proto (package spawner.scene.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file spawner/scene/v1/scene.proto.
 */
export const file_spawner_scene_v1_scene: GenFile = /*@__PURE__*/
  fileDesc("ChxzcGF3bmVyL3NjZW5lL3YxL3NjZW5lLnByb3RvEhBzcGF3bmVyLnNjZW5lLnYxIjEKDlNjZW5lQ2hhcmFjdGVyEgwKBG5hbWUYASABKAkSEQoJY3VzdG9tX2lkGAIgASgJInMKBVNjZW5lEgwKBG5hbWUYASABKAkSEQoJY3VzdG9tX2lkGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEjQKCmNoYXJhY3RlcnMYBCADKAsyIC5zcGF3bmVyLnNjZW5lLnYxLlNjZW5lQ2hhcmFjdGVyIl8KElNjZW5lTXV0YXRpb25FdmVudBITCgtkZXNjcmlwdGlvbhgBIAEoCRI0CgpjaGFyYWN0ZXJzGAIgAygLMiAuc3Bhd25lci5zY2VuZS52MS5TY2VuZUNoYXJhY3RlckKEAQoUY29tLnNwYXduZXIuc2NlbmUudjFCClNjZW5lUHJvdG9QAaICA1NTWKoCEFNwYXduZXIuU2NlbmUuVjHKAhBTcGF3bmVyXFNjZW5lXFYx4gIcU3Bhd25lclxTY2VuZVxWMVxHUEJNZXRhZGF0YeoCElNwYXduZXI6OlNjZW5lOjpWMWIGcHJvdG8z");

/**
 * @generated from message spawner.scene.v1.SceneCharacter
 */
export type SceneCharacter = Message<"spawner.scene.v1.SceneCharacter"> & {
  /**
   * Only output. Relative resource path.
   * Format: `workspaces:{workspace_id}:characters:{character_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * If a value is passed in a mutation request, the API
   * should try to add the character to the scene.
   *
   * @generated from field: string custom_id = 2;
   */
  customId: string;
};

/**
 * Describes the message spawner.scene.v1.SceneCharacter.
 * Use `create(SceneCharacterSchema)` to create a new message.
 */
export const SceneCharacterSchema: GenMessage<SceneCharacter> = /*@__PURE__*/
  messageDesc(file_spawner_scene_v1_scene, 0);

/**
 * Indicates the scene for the session.
 * Note that fields can be overidden by another.
 * Priority should be documented in the fields.
 *
 * @generated from message spawner.scene.v1.Scene
 */
export type Scene = Message<"spawner.scene.v1.Scene"> & {
  /**
   * Only output. Relative resource path.
   * Format: `workspaces:{workspace_id}:scenes:{scene_id}`
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Indicates the custom identifier of the scene.
   * Note that it may not be the same as the record id in storage.
   * This value has highest priority.
   *
   * @generated from field: string custom_id = 2;
   */
  customId: string;

  /**
   * The text description of the scene.
   * If this is set to `LOAD` a scene, the value will be used to create
   * an adhoc scene. Ignore this value if `custom_id` is provided.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Indicates the characters in the scene.
   *
   * @generated from field: repeated spawner.scene.v1.SceneCharacter characters = 4;
   */
  characters: SceneCharacter[];
};

/**
 * Describes the message spawner.scene.v1.Scene.
 * Use `create(SceneSchema)` to create a new message.
 */
export const SceneSchema: GenMessage<Scene> = /*@__PURE__*/
  messageDesc(file_spawner_scene_v1_scene, 1);

/**
 * Interface for scene mutations. Mutates scene info
 * at runtime. Allows dynamic modification of the scene description,
 * without changing the `custom_id` of the current scene.
 *
 * Note that mutations do not update the original scene data, and
 * do not persist past a single session.
 *
 * @generated from message spawner.scene.v1.SceneMutationEvent
 */
export type SceneMutationEvent = Message<"spawner.scene.v1.SceneMutationEvent"> & {
  /**
   * The text description of the scene.
   *
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * Indicates the characters to add to the scene. Mutation
   * must only be able to add characters. It cannot remove
   * characters from a scene.
   *
   * @generated from field: repeated spawner.scene.v1.SceneCharacter characters = 2;
   */
  characters: SceneCharacter[];
};

/**
 * Describes the message spawner.scene.v1.SceneMutationEvent.
 * Use `create(SceneMutationEventSchema)` to create a new message.
 */
export const SceneMutationEventSchema: GenMessage<SceneMutationEvent> = /*@__PURE__*/
  messageDesc(file_spawner_scene_v1_scene, 2);

