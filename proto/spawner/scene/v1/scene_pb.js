// @generated by protoc-gen-es v1.10.0
// @generated from file spawner/scene/v1/scene.proto (package spawner.scene.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message spawner.scene.v1.SceneCharacter
 */
export const SceneCharacter = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.scene.v1.SceneCharacter",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "custom_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Indicates the scene for the session.
 * Note that fields can be overidden by another.
 * Priority should be documented in the fields.
 *
 * @generated from message spawner.scene.v1.Scene
 */
export const Scene = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.scene.v1.Scene",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "custom_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "characters", kind: "message", T: SceneCharacter, repeated: true },
  ],
);

/**
 * Interface for scene mutations. Mutates scene info
 * at runtime. Allows dynamic modification of the scene description,
 * without changing the `custom_id` of the current scene.
 *
 * Note that mutations do not update the original scene data, and
 * do not persist past a single session.
 *
 * @generated from message spawner.scene.v1.SceneMutationEvent
 */
export const SceneMutationEvent = /*@__PURE__*/ proto3.makeMessageType(
  "spawner.scene.v1.SceneMutationEvent",
  () => [
    { no: 1, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "characters", kind: "message", T: SceneCharacter, repeated: true },
  ],
);

